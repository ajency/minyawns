// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['startapp', 'text!app/templates/activity-stream.html', 'moment'], function(App, activityStreamTpl, moment) {
    return App.module("ListActivity.Views", function(Views, App) {
      var SingleView;
      SingleView = (function(_super) {
        __extends(SingleView, _super);

        function SingleView() {
          return SingleView.__super__.constructor.apply(this, arguments);
        }

        SingleView.prototype.initialize = function() {};

        SingleView.prototype.tagName = 'div';

        SingleView.prototype.template = '<div class="avatar-box"> <div class="avatar left" href="#"> <img src="{{{NOAVATAR}}}" class="avatar-img ajan-user-pic-{{user_id}}"> </div> <div class="avatar-content"> <h5 class="avatar-heading left">{{{action}}} </h5> <h5 class="avatar-heading left full-width"> <small class="ajan-user-name ajan-user-name-{{user_id}}"> Minyawn</small> <small class="ajan-user-role ajan-user-role-{{user_id}}"></small> <small class="ajan-user-additional-info-{{user_id}}"></small></h5> <p class="comment m-tb-5">{{content}}</p> <div class="comment-info m-b-10"> <span class="comment-date left"> {{activity_date}} </span> <span class="left">&nbsp;|&nbsp;</span> <span class="comment-time left"> {{activity_time}} </span> <span class="right rep-del"> <a href="#" class="reply"> comments({{comment_count}}) </a>&nbsp; <a href="#" class="reply"> <span class="glyphicon glyphicon-share-alt"></span> </a>&nbsp; <a href="#" class="delete"> <span class="glyphicon glyphicon-trash"  ></span> </a> </span> </div> </div> <div class="alert-msg"> <div class="icon-close right"> <a href="#"  ><span class="glyphicon glyphicon-remove"></span></a> </div> Successfully deleted the message </div> </div>';

        SingleView.prototype.mixinTemplateHelpers = function(data) {
          var activity_date, date_recorded, date_recorded_date, date_recorded_time;
          data.NOAVATAR = NOAVATAR;
          activity_date = data.date_recorded;
          date_recorded = data.date_recorded.split(" ");
          date_recorded_date = date_recorded[0];
          date_recorded_time = date_recorded[1];
          activity_date = moment(date_recorded_date);
          data.activity_date = activity_date.format("MMM Do YY");
          data.activity_time = date_recorded_time;
          return data;
        };

        return SingleView;

      })(Marionette.ItemView);
      return Views.ShowPackage = (function(_super) {
        __extends(ShowPackage, _super);

        function ShowPackage() {
          return ShowPackage.__super__.constructor.apply(this, arguments);
        }

        ShowPackage.prototype.template = activityStreamTpl;

        ShowPackage.prototype.itemView = SingleView;

        ShowPackage.prototype.itemViewContainer = '#activity_container';

        ShowPackage.prototype.events = {
          'click #ajan-post-activity': function(e) {
            var data;
            e.preventDefault();
            console.log("click event");
            data = {
              content: $("#activity_content").val(),
              item_id: ajan_item_id
            };
            return this.trigger("save:new:activity", data);
          }
        };

        ShowPackage.prototype.onRender = function(collection) {
          this.trigger("get:user:info");
          return this.trigger("fetch:latest:comments");
        };

        ShowPackage.prototype.onItemAdded = function() {
          console.log("view onDomRefresh");
          return this.trigger("get:user:info");
        };

        ShowPackage.prototype.onAddedActivityModel = function() {
          console.log("onNewActivityAdded");
          return this.trigger("get:user:info");
        };

        ShowPackage.prototype.onChangeUserImage = function(n) {
          return _.each(n.models, function(model) {
            $(".ajan-user-pic-" + model.get("ID")).attr("src", model.get("profile_pic"));
            $(".ajan-user-role-" + model.get("ID")).html(model.get("user_role"));
            $(".ajan-user-name-" + model.get("ID")).html(model.get("name"));
            if (model.get("additional_info") !== "") {
              $(".ajan-user-additional-info-" + model.get("ID")).addClass("ajan-user-additional-info");
              $(".ajan-user-additional-info-" + model.get("ID")).html(model.get("additional_info"));
            }
          });
        };

        ShowPackage.prototype.onActivityCommentsFetched = function(n) {
          console.log("collection of comments");
          return console.log(n);
        };

        return ShowPackage;

      })(Marionette.CompositeView);
    });
  });

}).call(this);
