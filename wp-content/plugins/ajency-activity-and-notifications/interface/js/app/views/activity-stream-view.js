// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['startapp', 'text!app/templates/activity-stream.html'], function(App, activityStreamTpl) {
    return App.module("ListActivity.Views", function(Views, App) {
      var SingleView;
      SingleView = (function(_super) {
        __extends(SingleView, _super);

        function SingleView() {
          return SingleView.__super__.constructor.apply(this, arguments);
        }

        SingleView.prototype.tagName = 'div';

        SingleView.prototype.template = '<div class="avatar-box"> <div class="avatar left" href="#"> <img src="{{{NOAVATAR}}}" class="avatar-img" id="ajan-user-pic-{{id}}"> </div> <div class="avatar-content"> <h5 class="avatar-heading left">{{{action}}} </h5> <p class="comment m-tb-5">{{content}}</p> <div class="comment-info m-b-10"> <span class="comment-date left"> 14 July 2016 </span> <span class="left">&nbsp;|&nbsp;</span> <span class="comment-time left"> 9:30 am </span> <span class="right rep-del"> <a href="#" class="reply"> <span class="glyphicon glyphicon-share-alt"></span> </a>&nbsp; <a href="#" class="delete"> <span class="glyphicon glyphicon-trash"  ></span> </a> </span> </div> </div> <div class="alert-msg"> <div class="icon-close right"> <a href="#"  ><span class="glyphicon glyphicon-remove"></span></a> </div> Successfully deleted the message </div> </div>';

        SingleView.prototype.mixinTemplateHelpers = function(data) {
          data.NOAVATAR = NOAVATAR;
          return data;
        };

        return SingleView;

      })(Marionette.ItemView);
      return Views.ShowPackage = (function(_super) {
        __extends(ShowPackage, _super);

        function ShowPackage() {
          return ShowPackage.__super__.constructor.apply(this, arguments);
        }

        ShowPackage.prototype.template = activityStreamTpl;

        ShowPackage.prototype.itemView = SingleView;

        ShowPackage.prototype.itemViewContainer = '#activity_container';

        ShowPackage.prototype.onShow = function() {
          return this.trigger("new:user:info");
        };

        return ShowPackage;

      })(Marionette.CompositeView);
    });
  });

}).call(this);
