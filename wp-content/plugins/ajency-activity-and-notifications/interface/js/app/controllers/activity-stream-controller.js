// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["startapp", "backbone", "marionette", "app/views/activity-stream-view", "app/controllers/region-controller"], function(App, Backbone, Marionette, ActivityStreamView, RegionController) {
    return App.module("ListActivity", function(ListActivity, App) {
      var activitystreamcontroller;
      activitystreamcontroller = (function(_super) {
        __extends(activitystreamcontroller, _super);

        function activitystreamcontroller() {
          return activitystreamcontroller.__super__.constructor.apply(this, arguments);
        }

        activitystreamcontroller.prototype.initialize = function() {
          var view;
          this.activityCollection = App.request("get:activity:collection");
          this.view = view = this._getView(this.activityCollection);
          this.listenTo(view, "new:user:info", this._getUsers);
          return App.execute("when:fetched", [this.activityCollection], (function(_this) {
            return function() {
              return _this.show(view);
            };
          })(this));
        };

        activitystreamcontroller.prototype._getView = function(activityCollection) {
          return new ListActivity.Views.ShowPackage({
            collection: activityCollection
          });
        };

        activitystreamcontroller.prototype._getUsers = function() {
          var user_ids;
          user_ids = this.activityCollection.pluck("user_id");
          user_ids = _.uniq(user_ids).join();
          this.userCollection = App.request("get:user:collection", {
            users: user_ids
          });
          return App.execute("when:fetched", [this.userCollection], (function(_this) {
            return function() {
              console.log("usercol");
              return console.log(_this.userCollection);
            };
          })(this));
        };

        return activitystreamcontroller;

      })(RegionController);
      return App.commands.setHandler("show:activity:package", function(opt) {
        if (opt == null) {
          opt = {};
        }
        return new activitystreamcontroller(opt);
      });
    });
  });

}).call(this);
