// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['startapp', 'backbone'], function(App) {
    return App.module("Entities.Comment", function(Comment, App) {
      var API, CommentModel, commentCollection;
      CommentModel = (function(_super) {
        __extends(CommentModel, _super);

        function CommentModel() {
          return CommentModel.__super__.constructor.apply(this, arguments);
        }

        CommentModel.prototype.idAttribute = 'ID';

        CommentModel.prototype.defaults = {
          user_id: "",
          component: "",
          type: "",
          action: "",
          content: "",
          item_id: "",
          secondary_item_id: "",
          date_recorded: "",
          comment_count: "",
          nonce: ACTIVITY_NONCE_STRING
        };

        CommentModel.prototype.name = 'comment';

        CommentModel.prototype.urlRoot = SITEURL + ajan_post_comments_uri;

        return CommentModel;

      })(Backbone.Model);
      Comment.CommentCollection = (function(_super) {
        __extends(CommentCollection, _super);

        function CommentCollection() {
          return CommentCollection.__super__.constructor.apply(this, arguments);
        }

        CommentCollection.prototype.model = CommentModel;

        CommentCollection.prototype.url = function() {
          return SITEURL + ajan_get_comments_uri;
        };

        CommentCollection.prototype.parse = function(response) {
          return response.collection;
        };

        return CommentCollection;

      })(Backbone.Collection);
      commentCollection = new Comment.CommentCollection;
      API = {
        saveComment: function(data) {
          var ajan_post_data, comment;
          ajan_post_data = ajan_post_activities_uri;
          console.log("entity save comment");
          comment = new CommentModel(data);
          console.log(comment);
          return comment;
        },
        addComment: function(model) {
          console.log("model add activity");
          return commentCollection.add(model);
        }
      };
      App.reqres.setHandler("create:new:comment", function(data) {
        return API.saveComment(data);
      });
      return App.commands.setHandler("add:new:comment:model", function(model) {
        return API.addComment(model);
      });
    });
  });

}).call(this);
